/* 
 * Tradovate API
 *
 * Tradovate API
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace Tradovate.Services.Model
{
    /// <summary>
    /// ProductSession
    /// </summary>
    [DataContract]
    public partial class ProductSession :  IEquatable<ProductSession>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ProductSession" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ProductSession() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ProductSession" /> class.
        /// </summary>
        /// <param name="Id">Id.</param>
        /// <param name="OpenTime">OpenTime (required).</param>
        /// <param name="StartTime">StartTime (required).</param>
        /// <param name="StopTime">StopTime (required).</param>
        /// <param name="CloseTime">CloseTime (required).</param>
        /// <param name="SundayOpenTime">SundayOpenTime.</param>
        public ProductSession(int? Id = null, TradeTime OpenTime = null, TradeTime StartTime = null, TradeTime StopTime = null, TradeTime CloseTime = null, TradeTime SundayOpenTime = null)
        {
            // to ensure "OpenTime" is required (not null)
            if (OpenTime == null)
            {
                throw new InvalidDataException("OpenTime is a required property for ProductSession and cannot be null");
            }
            else
            {
                this.OpenTime = OpenTime;
            }
            // to ensure "StartTime" is required (not null)
            if (StartTime == null)
            {
                throw new InvalidDataException("StartTime is a required property for ProductSession and cannot be null");
            }
            else
            {
                this.StartTime = StartTime;
            }
            // to ensure "StopTime" is required (not null)
            if (StopTime == null)
            {
                throw new InvalidDataException("StopTime is a required property for ProductSession and cannot be null");
            }
            else
            {
                this.StopTime = StopTime;
            }
            // to ensure "CloseTime" is required (not null)
            if (CloseTime == null)
            {
                throw new InvalidDataException("CloseTime is a required property for ProductSession and cannot be null");
            }
            else
            {
                this.CloseTime = CloseTime;
            }
            this.Id = Id;
            this.SundayOpenTime = SundayOpenTime;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public int? Id { get; set; }
        /// <summary>
        /// Gets or Sets OpenTime
        /// </summary>
        [DataMember(Name="openTime", EmitDefaultValue=false)]
        public TradeTime OpenTime { get; set; }
        /// <summary>
        /// Gets or Sets StartTime
        /// </summary>
        [DataMember(Name="startTime", EmitDefaultValue=false)]
        public TradeTime StartTime { get; set; }
        /// <summary>
        /// Gets or Sets StopTime
        /// </summary>
        [DataMember(Name="stopTime", EmitDefaultValue=false)]
        public TradeTime StopTime { get; set; }
        /// <summary>
        /// Gets or Sets CloseTime
        /// </summary>
        [DataMember(Name="closeTime", EmitDefaultValue=false)]
        public TradeTime CloseTime { get; set; }
        /// <summary>
        /// Gets or Sets SundayOpenTime
        /// </summary>
        [DataMember(Name="sundayOpenTime", EmitDefaultValue=false)]
        public TradeTime SundayOpenTime { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ProductSession {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  OpenTime: ").Append(OpenTime).Append("\n");
            sb.Append("  StartTime: ").Append(StartTime).Append("\n");
            sb.Append("  StopTime: ").Append(StopTime).Append("\n");
            sb.Append("  CloseTime: ").Append(CloseTime).Append("\n");
            sb.Append("  SundayOpenTime: ").Append(SundayOpenTime).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as ProductSession);
        }

        /// <summary>
        /// Returns true if ProductSession instances are equal
        /// </summary>
        /// <param name="other">Instance of ProductSession to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ProductSession other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.Id == other.Id ||
                    this.Id != null &&
                    this.Id.Equals(other.Id)
                ) && 
                (
                    this.OpenTime == other.OpenTime ||
                    this.OpenTime != null &&
                    this.OpenTime.Equals(other.OpenTime)
                ) && 
                (
                    this.StartTime == other.StartTime ||
                    this.StartTime != null &&
                    this.StartTime.Equals(other.StartTime)
                ) && 
                (
                    this.StopTime == other.StopTime ||
                    this.StopTime != null &&
                    this.StopTime.Equals(other.StopTime)
                ) && 
                (
                    this.CloseTime == other.CloseTime ||
                    this.CloseTime != null &&
                    this.CloseTime.Equals(other.CloseTime)
                ) && 
                (
                    this.SundayOpenTime == other.SundayOpenTime ||
                    this.SundayOpenTime != null &&
                    this.SundayOpenTime.Equals(other.SundayOpenTime)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.Id != null)
                    hash = hash * 59 + this.Id.GetHashCode();
                if (this.OpenTime != null)
                    hash = hash * 59 + this.OpenTime.GetHashCode();
                if (this.StartTime != null)
                    hash = hash * 59 + this.StartTime.GetHashCode();
                if (this.StopTime != null)
                    hash = hash * 59 + this.StopTime.GetHashCode();
                if (this.CloseTime != null)
                    hash = hash * 59 + this.CloseTime.GetHashCode();
                if (this.SundayOpenTime != null)
                    hash = hash * 59 + this.SundayOpenTime.GetHashCode();
                return hash;
            }
        }
    }

}
